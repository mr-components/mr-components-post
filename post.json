{
  "playwright-para-automatizar-procesos": {
    "id": "01",
    "tags": [
      "story time"
    ],
    "category": "opini√≥n",
    "createdAt": "Date",
    "publishedAt": "2022/02/23",
    "author": "LuisForerop",
    "status": "published",
    "title": "¬°Un dramaturgo me ayud√≥ a salir a producci√≥n!",
    "brief": "Si quieres *saber* c√≥mo fue que un dramaturgo me facilit√≥ la vida en mi primera salida a producci√≥n y lo que aprend√≠ sobre el proceso, acomp√°√±ame hasta el final.",
    "readingTime": 5,
    "path": "playwright-para-automatizar-procesos",
    "content": "Hace ya cerca de una semana que salimos a producci√≥n (*mi primera vez* üò±) con una migraci√≥n en la que estuve trabajando por unos *cuatro meses*, y la verdad es que resulta emocionante saber que luego de escribir mucho c√≥digo, solucionar bugs y adelantar documentaci√≥n en el proceso, muchos usuarios tendr√°n contacto directo con tu trabajo.\n\nComo todos sabemos, adem√°s de codear, hay m√°s actividades detr√°s de cualquier proyecto de desarrollo, y en el que trabaj√© ten√≠amos algunas tareas \"administrativas\". Resulta que luego de crear componentes deb√≠amos lograr que varios de estos se pudieran editar/configurar desde un m√≥dulo administrativo, lo cual es realmente sencillo con [VTEX IO](https://developers.vtex.com/vtex-developer-docs/docs/welcome).\n\nHasta ah√≠, nada raro, pero teniendo en cuenta que el proyecto se trataba de una migraci√≥n, ten√≠amos que hacer que toda la configuraci√≥n que ya estaba en producci√≥n quedara exactamente igual en nuestra nueva versi√≥n. Uno dir√≠a que hacer unos cuantos clics, subir una que otra imagen, y configurar algunos numeritos no es nada del otro mundo, pero, ¬øqu√© pasa cuando esos *\"unos cuantos\"* son **m√°s de 60**? La cosa se pone a√∫n m√°s tediosa cuando hablamos de tener que configurar no solo un workspace, sino varios, y posiblemente tenerlo que hacer m√°s de una vez... As√≠ es, resulta que al solucionar un bug, perdimos la configuraci√≥n de unas 62 p√°ginas üò™.\n\nPara el momento en el que me encomendaron esta tarea estaba bastante ü§î porque tendr√≠a que gastar una buena cantidad de tiempo en un proceso repetitivo, y pues yo soy de los que automatiza hasta el diligenciamiento de un formulario de 4 campos.\n\nPues resulta que ac√° es donde entra nuestro amigo el \"dramaturgo\" ([playwright](https://playwright.dev) en ingl√©s), que es, nada m√°s y nada menos que, una herramienta para web scraping y testing e2e. As√≠ es, mi amigo el \"dramaturgo\" me ayud√≥ a configurar cerca de 75 p√°ginas en m√°s de dos ocasiones, y cargar unas 60 im√°genes para que todo el sitio quedar√° espectacular. No me llevar√© 100% el cr√©dito, porque sin los valiosos videos de Miguel ([Midudev](https://www.instagram.com/midu.dev/) para los amigos) no habr√≠a conocido esta herramienta.\n\nLo que hice fue crear una serie de scrapers utilizando playwright, los cuales me ayudaron a recopilar informaci√≥n de la antigua versi√≥n, configurar la nueva y verificar que ciertas p√°ginas hubiesen quedado correctamente configuradas luego de la salida a producci√≥n.\n\n## ¬øY ya, eso es todo? üôÑ\n\nPues no. Por un lado, quer√≠a presentarte a **[Playwright](https://playwright.dev)**, un proyecto desarrollado por los mismos creadores de [Selenuim](https://www.selenium.dev), y por otro, contarte tres cosas que aprend√≠ luego de invertir m√°s de 40 horas haciendo pruebas de concepto, implementando un versi√≥n b√°sica, creando varios scrapers y d√°ndole un poquito de amor a este proyecto.\n\n 1Ô∏è‚É£ Es posible que *exista una manera **m√°s eficiente** de hacer algo que est√°s haciendo*: antes de comenzar este mini-proyecto, ya hab√≠a gastado un tiempo haciendo ciertas configuraciones, pero result√≥ que el workspace en donde hab√≠a trabajado no era el que se iba a \"desplegar\" (promover para ser m√°s exactos) a producci√≥n, as√≠ que ese tiempo se perdi√≥. Al darme cuenta que podr√≠a pasar de nuevo, estuve perceptivo a alternativas m√°s eficientes de hacerlo, y cuando vi un stream de Midu en el que creaba un scraper para comprarse una XBOX, me di cuenta que podr√≠a usar lo que acababa de ver.\n\n 2Ô∏è‚É£ *Implementa ideas solo **si aportan valor**, porque lo que importa no es la idea sino el problema que resuelve*: tienes que ser consciente de que cada idea en la que vas a trabajar implica un consumo de recursos, sea de tiempo o de equipo, y existe la posibilidad de que no funcione. Analiza si la idea aportar√° suficiente valor a un proceso o al negocio en general y si est√° resolviendo un problema real, y si no, quiz√° sea mejor dejarla en standby o descartarla. Siempre habr√°n otras ideas por explorar.\n\n 3Ô∏è‚É£ ***No** busques siempre la **perfecci√≥n***: esto tiene mucho que ver con el desarrollo √°gil. La perfecci√≥n implica mucho tiempo, y cuando no sabes si algo va a funcionar, esto no es la mejor opci√≥n. Empieza por una prueba de concepto que te ayude a validar si t√©cnicamente el desarrollo de tu idea es posible, luego trabaja en un MVP, que probablemente sea un caos de c√≥digo, y si ves que funciona y puede ofrecer mucho (o suficiente) valor, dale \"cari√±o\" a tu creaci√≥n haciendo peque√±as refactorizaciones o implementando nuevas funcionalidades.\n\nY t√∫, ¬øalguna vez has tenido que hacer procesos repetitivos y aburridos? ¬ølos pudiste automatizar?"
  }
}